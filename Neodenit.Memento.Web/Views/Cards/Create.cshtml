@using Neodenit.Memento.Common
@using Neodenit.Memento.Common.App_GlobalResources
@using Neodenit.Memento.Models.ViewModels

@model EditCardViewModel

@{
    ViewBag.Title = "Create Card";
}

<h2>Create Card</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.ReadingCardId)

    <div class="form-horizontal">
        <hr />

        <div class="form-group row">
            <div class="col-md-3">
                1. @Resources.CardCreateHelpPasteText
            </div>
            <div class="col-md-3">
                2. @Resources.CardCreateHelpSelectText
            </div>
            <div class="col-md-3">
                3. @Resources.CardCreateHelpClickAddText
            </div>
            <div class="col-md-3">
                4. @Resources.CardCreateHelpClickCreateText
            </div>
        </div>

        <hr />

        <div class="row">
            @Html.ValidationSummary(true, "", new { @class = "col-md-offset-2 text-danger" })
        </div>

        <div class="row">
            <div id="customErrorMessage" class="col-md-offset-2 text-danger hidden">Please select key word(s).</div>
        </div>

        <div class="form-group row">
            <div class="col-md-offset-2 col-md-10">
                <button class="btn btn-default" id="AddCloze">Add Cloze</button>
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control", rows = 10 } })
                @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control", rows = 5 } })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.ReadingCardId != Guid.Empty)
        {
            <div class="form-group row">
                @Html.LabelFor(model => model.DeckID, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.DeckID, ViewBag.Decks as SelectList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DeckID, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group row">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>

    @if (Model.ReadingCardId != Guid.Empty)
    {
        <a href="@Settings.Default.IncrementalReadingServer/Cards/Details/@Model.ReadingCardId">Back</a>
    }
    else if (Model.DeckID == Guid.Empty)
    {
        @Html.ActionLink("Index", "Index", "Decks");
    }
    else
    {
        @Html.ActionLink("Back", "Details", "Decks", new DeckViewModel { ID = Model.DeckID }, null);
    }
</div>

@section Scripts {
    <script src="~/js/jquery-validation/dist/jquery.validate.js"></script>
    <script src="~/js/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
    <script src="~/js/CardCreate.js"></script>
    <script src="~/js/CorrectSelection.js"></script>
}
